{
    "en":
    {
        "vacancy":"Programmer, game developer",
        "nav_aboutMe": "About me",
        "nav_languages": "Languages",
        "nav_skills": "Skills",
        "nav_projects": "Projects",
        "am_title": "About me",
        "am_p": "Hi, I'm Pablo and I'm a Game Development graduate at Complutense University of Madrid, where I got to participate in the development of different apps, games and tools for PC, mobile and PS4.\nI'm currently looking for a programmer job (on-site or remote), primarily on the videogame scene, although I'm open to explore new environments.",
        "lan_title": "Languages",
        "lan_spa": "Spanish - Native",
        "lan_eng": "English - B2, Independent user",
        "sk_title": "Skills",
        "sk_p": "I mainly use C++ and C# and I've also used Java, Python, Javascript, LUA and C. I've thoroughly used the Unity game engine, and I have basic knowledge on UnrealEngine4.\nThroughout my college years, I've learned and used a wide set of skills:",
        "sk_0": "Development of interactive software.",
        "sk_1": "Interactive software architecture.",
        "sk_2": "Algorithms, types and structures for troubleshooting.",
        "sk_3": "Logic/gameplay programming in videogames.",
        "sk_4": "Design of extendable and reusable applications.",
        "sk_5": "Digital audio management systems.",
        "sk_6": "Multithreaded application development.",
        "sk_7": "Multiplatform application development.",
        "sk_8": "Digital systems on local networks and Internet.",
        "sk_9": "Symbolic and sub-symbolic artificial inteligence.",
        "sk_10": "Console and mobile application development.",
        "sk_11": "Knowledge in computer graphics processing (graphics pipeline, shaders, meshes and lighting.",
        "sk_12": "Teamwork.",
        "pr_title": "Projects",
        "pr0_title": "Procedural generation of ecosystems and living beings",
        "pr0_p": "BSC, consistent of the development of a tool that creates an environment and creatures that adapt and evolve within the biome. The project brings together multiple techniques, such as terrain generation, artificial intelligence, pathfindig and evolutionary programming. The project also contains a telemetry system and data visualization and analysis tools made for the evaluation of the program.\nResponsabilities:",
        "pr0_comp0": "Involvement on the iterative and incremental development process (planning, objectives, development and testing).",
        "pr0_comp1": "Design and implementation of the tool's software structure.",
        "pr0_comp2": "Implementation of the bases and the creature's logic behaviour itself.",
        "pr0_comp3": "Design and implementation of the tracking system.",
        "pr0_comp4": "Evolutionary system's embedding on an external environment (Unity).",
        "pr0_source": "Source",
        "pr1_title": "Oh-nO and FlowFree clones",
        "pr1_p": "Recreation of these apps using Java (Swing) and Unity respectively.\nResponsabilities:",
        "pr1_comp0": "Multiplatform design (PC and Android).",
        "pr1_comp1": "Application design for extensibility, for future content addition.",
        "pr1_comp2": "Data persistence system.",
        "pr1_source": "Source",
        "pr2_title": "Papagayos Engine",
        "pr2_p": "Game engine made from scratch, written using C++ and a variety of libraries (Ogre3D, CEGUI, Bullet, SDL, FMOD and LUABridge). It is a data-driven engine, it uses JSON files to define scenes and LUA scripts for the game logic. CyberStork and Bat-the-Bird were made using this engine.\nResponsabilities:",
        "pr2_comp0": "Module design (Physics module, graphics module...).",
        "pr2_comp1": "Entity-Component structure within scenes.",
        "pr2_comp2": "Scenes and LUA scripts deserialization.",
        "pr2_comp3": "Game logic.",
        "pr2_source": "Source",
        "pr3_title": "Wolfenstein 3D (1992)",
        "pr3_p": "Wolfenstein 3D(1992) replica. Written using C++ for both PC and PS4. For legal reasons, the source only includes common and PC-specific code.\nResponsabilities:",
        "pr3_comp0": "Multiplatform design (PC and PS4).",
        "pr3_comp1": "Low-level programming in PS4 (memory and render buffers management).",
        "pr3_comp2": "Multithreaded application, with two different threads (render and logic) that communicate using a concurrent queue.",
        "pr3_comp3": "3D simulation usign 2D textures and raycasting.",
        "pr3_source": "Source",
        "pr4_title": "TuteLan",
        "pr4_p": "Adaptation of the traditional spanish card game \"Tute\". Written using C++ with SDL2, available only on Linux. The network (one server and four clients) must be configured before playing. The four players will be divided in two teams and the first one to win ten rounds will be the winner of the game.\nResponsabilities:",
        "pr4_comp0": "Client-Server arquitecture, where the server handles the game state updates and notifies every client.",
        "pr4_comp1": "Serialization and deserialization of the TCP packages.",
        "pr4_comp2": "Game logic programming.",
        "pr4_source": "Source",
        "pr5_title": "Fighter-Traighter",
        "pr5_p": "Fighter-Traighter is a 2D fighting game written in C++ using SDL2 and Box2D. See if you can win against the AI in the 1vsAI mode or challenge a friend in the 1vs1 mode. In Fighter-Traighter every fight starts with a traning phase, where you'll have to compete with your opponent hitting the punching bag to achive different perks. Use this perks on the combat phase, where you'll have to beat your oponent in a fight.\nResponsabilities:",
        "pr5_comp0": "Box2D embedding and the implementation of the physics system.",
        "pr5_comp1": "State stack and Entity-Component application structure.",
        "pr5_comp2": "Game logic programming.",
        "pr5_web": "Web page and download",
        "pr5_source": "Source",
        "pr6_title": "Nakhevari",
        "pr6_p": "2D platformer, made with Javascript using the Phaser framework. In Nakhevari, the main goal is to get to the bottom of the map, evading obstacles and enemies. The map is divided by a wall, which will make you have to change sides to reach the end.\nResponsabilities:",
        "pr6_comp0": "Game loop implementation.",
        "pr6_comp1": "Game logic programming",
        "pr6_play": "Play",
        "pr6_source": "Source",
        "pr7_title": "RArkanoid",
        "pr7_p": "\"Breakout\" game in augmented reality, developed using Unity and Vuforia. In every level, you'll have to destroy every block to progress to the next level. There are 10 different levels.\nIn order to play, it's needed to aim the phone camera towards the images provided within the project. Then, the map will apear in augmented reality and the game starts.",
        "pr7_source": "Source"
    },
    "spa":
    {
        "vacancy":"Programador, desarrollador de videojuegos",
        "nav_aboutMe": "Sobre mí",
        "nav_languages": "Idiomas",
        "nav_skills": "Aptitudes",
        "nav_projects": "Proyectos",
        "am_title": "Sobre mí",
        "am_p": "Soy programador, graduado en Desarrollo de Videojuegos en la Universidad Complutense de Madrid, donde he participado en el desarrollo de aplicaciones para PC, móviles y PS4, además de varios juegos y herramientas.\nActualmente estoy buscando una plaza donde pueda aportar mis habilidades y seguir aprendiendo. Vivo en Ciudad Real, pero tengo flexibilidad para trasladarme al lugar de trabajo o para trabajar en remoto.",
        "lan_title": "Idiomas",
        "lan_spa": "Español - Nativo",
        "lan_eng": "Inglés - B2, Usuario independiente",
        "sk_title": "Aptitudes",
        "sk_p": "Manejo principalmente C++ y C#, además tengo experiencia utilizando Java, Python, Javascript, LUA y C. He utilizado de una forma amplia el motor de videojuegos Unity, y de una forma más básica el UnrealEngine.\nEn el desarrollo de los proyectos en los que he participado, he aprendido y utilizado diferentes habilidades entre las que cabe destacar:",
        "sk_0": "Desarrollo iterativo de software.",
        "sk_1": "Arquitectura de software interactivo.",
        "sk_2": "Algoritmos, tipos y estructuras para la resolución de problemas.",
        "sk_3": "Programación de la lógica/gameplay en videojuegos.",
        "sk_4": "Diseño de aplicaciones extensibles y reutilizables.",
        "sk_5": "Sistemas para el manejo del audio digital.",
        "sk_6": "Desarrollo de aplicaciones multihilo.",
        "sk_7": "Desarrollo de aplicaciones multiplataforma.",
        "sk_8": "Sistemas digitales en redes locales e Internet.",
        "sk_9": "Inteligencia artificial simbólica y subsimbólica",
        "sk_10": "Creación de aplicaciones para dispositivos móviles y consolas de videojuegos.",
        "sk_11": "Conocimientos sobre el procesamiento gráfico en computadores (tubería gráfica, shaders, imágenes, mallas e iluminación).",
        "sk_12": "Trabajo en equipo.",
        "pr_title": "Proyectos",
        "pr0_title": "Generación procedimental de ecosistemas y seres vivos",
        "pr0_p": "Trabajo de fin de grado, que consisite en el desarrollo de una herramienta capaz de generar un entorno y unas criaturas que evolucionan y se adaptan al mismo. El proyecto aglutina multitud de técnicas que se encuentran dentro los campos de la generación de terrenos, la inteligencia artificial, la búsqueda de caminos y la programación evolutiva. Contiene también un sistema de telemetría y herramientas de análisis y visualización de datos para la evaluación del funcionamiento del programa.\nCompetencias:",
        "pr0_comp0": "Participación continua en el proceso de desarrollo iterativo (planificación, objetivos, desarrollo y pruebas).",
        "pr0_comp1": "Diseño e implementación de la estructura software de la herramienta.",
        "pr0_comp2": "Implementación de las bases y del propio comportamiento lógico de las criaturas.",
        "pr0_comp3": "Diseño e implementación del sistema de telemetría y del análisis de trazas.",
        "pr0_comp4": "Acoplamiento del proyecto a un entorno externo (Unity).",
        "pr0_source": "Enlace al repositorio",
        "pr1_title": "Clones de Oh-nO y FlowFree",
        "pr1_p": "Recreación de estas aplicaciones utilizando Java(Swing) y Unity respectivamente.\nCompetencias:",
        "pr1_comp0": "Diseño multiplataforma (PC y Android).",
        "pr1_comp1": "Diseño de aplicaciones extensibles, para la introducción de contenido a posteriori.",
        "pr1_comp2": "Sistema de persistencia de datos.",
        "pr1_source": "Enlace al repositorio",
        "pr2_title": "Papagayos Engine",
        "pr2_p": "Motor de videojuegos hecho desde cero en C++, utilizando Ogre3D, CEGUI, Bullet, SDL, FMOD y LUABridge. Motor basado en datos, que utiliza archivos JSON para la creación de escenas y LUA como lenguaje de scripting para la creación de la lógica de juego. Los juegos CyberStork y Bat-the-Bird se crearon utilizando este motor.\nCompetencias:",
        "pr2_comp0": "Diseño modular (módulo de física, módulo de gráficos...).",
        "pr2_comp1": "Estructura del programa siguiendo el patrón Entidad-Componente en escenas.",
        "pr2_comp2": "Deserialización de escenas y archivos LUA de lógica de juego.",
        "pr2_comp3": "Programación de lógica en los juegos.",
        "pr2_source": "Enlace al repositorio",
        "pr3_title": "Wolfenstein 3D (1992)",
        "pr3_p": "Recreación de Wolfenstein 3D de 1992, donde se puede navegar por los varios mapas del famoso juego. Desarrollado en C++ para PC(usando SDL) y PS4. Por motivos legales, en el repositorio solo se encuentra código común y el específico de la versión de PC.\nCompetencias:",
        "pr3_comp0": "Diseño multiplataforma (PC y PS4).",
        "pr3_comp1": "Programación de bajo nivel en PS4 (manejo de la memoria y buffers de renderizado).",
        "pr3_comp2": "Desarrollo de una aplicación multihilo, con dos hilos (renderizado y lógica) que se comunican meidante una cola concurrente.",
        "pr3_comp3": "Implementación del Raycast para simular el 3D con texturas 2D.",
        "pr3_source": "Enlace al repositorio",
        "pr4_title": "TuteLan",
        "pr4_p": "Recreación del juego tradicional de la baraja española \"Tute\". Desarrollado en C++ utilizando SDL, para máquinas Linux. Para jugar hace falta configurar la red con un servidor y conectar 4 clientes, que jugarán en equipos de dos. Ganará el equipo que gane 10 rondas.\nCompetencias:",
        "pr4_comp0": "Diseño de la aplicación con una topología Cliente-Servidor, donde el servidor se encarga de la actualización del estado de juego y lo comunica a los clientes.",
        "pr4_comp1": "Serialización y deserialización de los paquetes TCP con la información de juego.",
        "pr4_comp2": "Programación de la lógica del juego.",
        "pr4_source": "Enlace al repositorio",
        "pr5_title": "Fighter-Traighter",
        "pr5_p": "Fighter-Traighter se trata de un juego de acción 2D de lucha, desarrollado en C++, utilizando SDL2 y Box2D. En Fighter-Traighter cada combate tiene una fase de entrenamiento, en la que los jugadores se compiten entre sí para beneficios para la siguiente fase, donde pelearán entre sí hasta que se logre noquear al oponente. Existen dos modos principales: 1 contra 1 local y combate contra la IA.\nCompetencias:",
        "pr5_comp0": "Acoplamiento e implementación del sistema de físicas con Box2D.",
        "pr5_comp1": "Participación en diseño de la aplicación como una pila de estados y siguiendo el patrón Entidad-Componente.",
        "pr5_comp2": "Programación de lógica de juego.",
        "pr5_web": "Página web y descarga",
        "pr5_source": "Enlace al repositorio",
        "pr6_title": "Nakhevari",
        "pr6_p": "Juego de plataformas 2D en web, utilizando el framework de Phaser. En Nakhevari el objetivo es llegar al final del mapa, teniendo que bajar esquivando obstáculos y matando enemigos. El mapa está dividido en dos por muro vertical y se tendrá que elegir en qué lado de la pantalla estar para poder conseguir mejores objetos y puntos y conseguir llegar al final. Pero cambiar de lado no es tan sencillo y además cuanto más bajes, mayor será el desafío.\nCompetencias:",
        "pr6_comp0": "Implementación del bucle de juego.",
        "pr6_comp1": "Programación de la lógica del juego.",
        "pr6_play": "Jugar",
        "pr6_source": "Enlace al repositorio",
        "pr7_title": "RArkanoid",
        "pr7_p": "Juego tipo \"Breakout\" en realidad aumentada desarrollado con Unity y Vuforia. Consta de 10 niveles en los que hay que destruir todos los bloques para poder avanzar al siguiente.\nEs necesario utilizar la cámara del móvil y apuntar a las imágenes especificadas en el proyecto para que aparezca el mapa en realidad aumentada y comenzar a jugar.",
        "pr7_source": "Enlace al repositorio"
    }
}